import { describe, it, expect } from 'vitest';
import { resolvedConfig } from '../../src/logic/config';

describe('resolvedConfig', () => {
  it('should resolve config with defaults', () => {
    const config = { input: 'input', output: 'output' };
    const result = resolvedConfig(config);
    expect(result).toHaveProperty('client');
    expect(result).toHaveProperty('func');
  });

  it('should override default config with provided values (transport as literal)', () => {
    const config = { input: 'input', output: 'output', client: { transport: 'custom' } };
    const result = resolvedConfig(config);
    expect(result.client.transport).toBe('"custom"');
  });

  it('should error with explination of whats required', () => {
    expect(resolvedConfig).toThrowError('❌ Missing configuration object');
    expect(() => resolvedConfig({} as any)).toThrowError('❌ Missing input path, this needs to be the type file generated by RSPC');
    expect(() => resolvedConfig({ input: 'input' } as any)).toThrowError('❌ Missing output path, this is where the generated code will be written to');
  });
});
